<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Growtopia Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Faculty+Glyphic&display=swap" rel="stylesheet">
</head>

<style>
	
	#loginButton {
    background-color: #2563eb; /* Tua Blue, not too dark */
    color: white;
    font-weight: bold;
    text-align: center;
    border-radius: 5px;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

#loginButton:hover {
    background-color: #1d4ed8; /* Slightly darker blue on hover */
    transform: scale(1.05);
}


    .register-btn {
        padding: 8px 16px;
        background-color: #10b981; /* Green color */
        color: white;
    font-weight: bold;
    text-align: center;
    border-radius: 5px;
    transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .gradient-border {
        border-width: 4px;
        border-style: solid;
        border-image: linear-gradient(to right, violet, indigo, blue, green, yellow, orange, red) 1;
    }

    .register-btn:hover {
        background-color: #059669; /* Darker green on hover */
        transform: scale(1.05);
    }

    .relative {
        background-color: #000000;
        /* Removed the border style here */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .flex.items-center.border-2 {
        border-color: #3b82f6;
        background-color: #000000;  /* Set background color to black */
    }

    .flex.items-center.border-2:hover {
        border-color: #60a5fa;
    }

    .text-white {
        color: white;
    }

    .text-xs {
        font-size: 12px;
    }

    /* Set background image for input fields */
    .bg-input {
        background-color: #000000; /* Set the background color to black */
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }

    input {
        background-color: #000000 !important;  /* Ensure black background on inputs */
    }

    /* Text color for labels and input placeholders */
    .text-input {
        color: white !important;
    }

    .placeholder-white {
        color: white !important;
    }

    /* Fixing placeholder text color */
    input::placeholder {
        color: #a0aec0; /* Light grey color for the placeholder */
    }
</style>

<body class="flex flex-col items-center justify-center h-screen bg-transparent font-serif">
    <div class="fixed inset-0 flex items-center justify-center">
        <div class="relative bg-[#000000] gradient-border shadow-lg p-6 w-96 h-auto rounded-lg animate__animated animate__fadeIn">
            
            <!-- Logo as text inside the form container -->
            <div class="flex justify-center mb-4">
                <h1 class="text-3xl font-bold text-white">Magical Login</h1>
            </div>
            <div id="errorDiv" class="hidden flex flex-col mt-2 text-sm text-red-900 font-bold px-[5px] bg-[#2563eb] rounded">
                <a id="errorMessage"></a>
            </div>
            <div id="accountLoggedIn" class="hidden flex flex-col items-center mt-2 text-sm text-white">
                <a id="growId">GrowID: null</a>
                <div class="flex justify-start text-[10px] text-white mt-2">
                    <a id="removeSession" class="underline" href="#">Remove Session?</a>
                </div>
            </div>
            <form method="post" action="/player/growid/login/validate" accept-charset="UTF-8" id="loginForm" class="mt-3 animate__animated animate__fadeIn">
    <div class="mb-1">
        <input name="type" value="log" type="hidden" />
        <input name="_token" value="<%= JSON.stringify(data) %>" type="hidden" />
        <label for="loginGrowId" class="block text-white text-xs">GrowID</label>
        <div class="flex items-center border-2 border-[#3b82f6] rounded bg-input px-1 py-2">
            <i class="fas fa-user text-white mr-1 text-xs"></i>
            <input type="text" name="growId" id="loginGrowId" class="w-full bg-[#bfdbfe] text-white text-xs placeholder-white focus:outline-none" placeholder="Enter your growid">
        </div>
    </div>
    <div class="mb-1">
        <label for="loginPassword" class="block text-white text-xs">Password</label>
        <div class="flex items-center border-2 border-[#3b82f6] rounded bg-input px-1 py-2">
            <i class="fas fa-lock text-white mr-1 text-xs"></i>
            <input type="password" name="password" id="loginPassword" class="w-full bg-[#bfdbfe] text-white text-xs placeholder-white focus:outline-none" placeholder="Enter your password">
            <button type="button" id="toggleLogPassword" class="text-white ml-2 focus:outline-none text-xs">
                <i class="fas fa-eye"></i>
            </button>
        </div>
    </div>
    <!-- Login Button above -->
    <div class="flex justify-center mb-4">
        <button id="loginButton" class="w-full px-4 py-2 rounded bg-[#2563eb] text-white font-bold text-center hover:bg-[#1d4ed8] transition duration-300 ease-in-out transform hover:scale-105">
    Login
</button>
    </div>

    <!-- Full Width Register Button -->
    <div class="flex justify-center">
        <a href="#" id="doYouNeedAccount" class="w-full register-btn px-4 py-2 rounded bg-[#10b981] text-white font-bold text-center hover:bg-[#059669] transition duration-300 ease-in-out transform hover:scale-105">
            Create GrowID
        </a>
    </div>
</form>


            <form method="post" action="/player/growid/login/validate" accept-charset="UTF-8" id="registerForm"
                class="hidden mt-3 animate__animated animate__fadeIn">
                <div class="mb-1">
                    <input name="type" value="reg" type="hidden" />
                    <input name="_token" value="{}" type="hidden" />
                    <input name="growId" value="" type="hidden" />
                    <input name="password" value="VertionLabsLul" type="hidden" />
                    <label for="regGrowId" class="block text-white text-xs">Eclipse-ID - Registration</label>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            if (localStorage.getItem('growId')) {
                document.getElementById('growId').innerHTML = `GrowID: ${localStorage.getItem('growId')}`;
                document.getElementById('loginGrowId').value = localStorage.getItem('growId');
                document.getElementById('accountLoggedIn').classList.remove('hidden');
            }
            // Login variables
            const loginGrowId = document.getElementById('loginGrowId').value
            const loginPassword = document.getElementById('loginPassword').value
        });
        document.getElementById('doYouNeedAccount').addEventListener('click', function () {
            const registerForm = document.getElementById('registerForm');
            registerForm.submit();
        });
        document.getElementById('loginButton').addEventListener('click', function (event) {
            event.preventDefault();

            const loginForm = document.getElementById('loginForm');
            const uName = document.getElementById('loginGrowId').value;
            const uPass = document.getElementById('loginPassword').value;

            if (!uName || !uPass) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'Username or Password is empty';
                return;
            } else if (uName.length < 3 || uPass.length < 3) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'Username or Password must be at least 4 characters long';
                return;
            } else {
                loginForm.submit();
                localStorage.setItem('growId', document.getElementById('loginGrowId').value);
            }
        })
        document.getElementById('toggleLogPassword').addEventListener('click', function () {
            const LpasswordField = document.getElementById('loginPassword')
            const LpasswordFieldType = LpasswordField.getAttribute('type');
            if (LpasswordFieldType === 'password') {
                LpasswordField.setAttribute('type', 'text');
                this.innerHTML = '<i class="fas fa-eye-slash"></i>';
            } else {
                LpasswordField.setAttribute('type', 'password');
                this.innerHTML = '<i class="fas fa-eye"></i>';
            }
        });
        document.getElementById('removeSession').addEventListener('click', function () {
            localStorage.removeItem('growId');
            document.getElementById('accountLoggedIn').classList.add('hidden');
        });
    </script>
</body>

</html>